#!/bin/bash
homedir=$1

function k8s_set_namespace() {
  pane=$1
  namespace=$2
  tmux send-keys -t $pane "kubectl config set-context --current --namespace=$namespace"
}

function k8s_watch_services() {
  pane=$1
  tmux send-keys -t $pane "kubectl get svc -w"
}

function k8s_watch_pods() {
  pane=$1
  tmux send-keys -t $pane "kubectl get pods -w"
}

#github_passw=$(pass repos/github/ssh/vivo_20240212_ed25519)
github_passw=github
#docker_passw=$(pass registries/dockerhub/tokens/build)
docker_passw=dockerhub
session=fscl
#session_exists=$(tmux list-sessions | grep $session)

# Check if the session exists, discarding output
# We can check $? for the exit status (zero for success, non-zero for failure)
tmux has-session -t $session 2>/dev/null
if [ $? != 0 ]; then
  tmux new-session -d -s $session -e DOCKERPW=$docker_passw -e GITPW=$github_passw -c $homedir
  tmux rename-window -t $session:0 "dev"
  tmux new-window -t $session:1 -n "build"
  tmux send-keys -t $session:1 "cd $homedir" C-m
  tmux new-window -t $session:2 -n "k8s"
  tmux send-keys -t $session:1 "cd $homedir" C-m
  tmux split-window -t $session:2
  tmux split-window -t $session:2.0 -h
  tmux send-keys -t $session:2.0.0 "cd $homedir" C-m
  tmux send-keys -t $session:2.0.1 "cd $homedir" C-m
  tmux send-keys -t $session:2.0.1 "k get pods -w"
  tmux new-window -t $session:3 -n "test"
  tmux send-keys -t $session:3 "cd $homedir" C-m

fi
tmux attach-session -t $session:0
